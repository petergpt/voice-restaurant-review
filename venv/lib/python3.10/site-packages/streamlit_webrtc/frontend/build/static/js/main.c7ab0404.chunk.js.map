{"version":3,"sources":["ThemeProvider.tsx","MediaStreamPlayer.tsx","Placeholder.tsx","media-constraint.ts","WebRtcStreamer.tsx","index.tsx","DeviceSelector.tsx"],"names":["ThemeProvider","props","stTheme","theme","muiTheme","React","useMemo","textColorScale","chroma","scale","textColor","backgroundColor","mode","createMuiTheme","palette","primary","main","primaryColor","background","default","paper","secondaryBackgroundColor","text","secondary","hex","disabled","typography","fontFamily","font","children","videoStyle","width","MediaStreamPlayer","useEffect","Streamlit","setFrameHeight","hasVideo","stream","getVideoTracks","length","refCallback","useCallback","node","srcObject","refreshFrameHeight","style","ref","autoPlay","controls","onCanPlay","memo","useStyles","makeStyles","padding","spacing","display","justifyContent","alignItems","Placeholder","classes","Paper","className","elevation","loading","CircularProgress","fontSize","compileMediaConstraints","src","videoDeviceId","audioDeviceId","constraints","video","deviceId","audio","isWebRtcMode","val","setupOffer","pc","createOffer","then","offer","console","log","setLocalDescription","Promise","resolve","iceGatheringState","addEventListener","checkState","removeEventListener","localDescription","catch","err","error","WebRtcStreamer","signallingTimer","processAnswerInner","sdpAnswerJson","a","sdpAnswer","JSON","parse","setRemoteDescription","processAnswer","clearTimeout","setState","webRtcState","sdpOffer","stop","startInner","args","Error","config","settings","rtc_configuration","RTCPeerConnection","evt","streams","media_stream_constraints","state","videoInput","audioInput","navigator","mediaDevices","getUserMedia","getTracks","forEach","track","addTrack","getTransceivers","direction","addTransceiver","start","signallingTimedOut","setTimeout","stopInner","undefined","transceiver","getSenders","sender","close","finally","reconcilePlayingState","desiredPlayingState","reconcileComponentValue","prevState","playing","playingChanged","prevSdpOffer","setComponentValue","toJSON","handleDeviceSelect","render","constraintsFromPython","buttonDisabled","videoEnabled","audioEnabled","receivable","isReceivable","transmittable","isTransmittable","Box","Alert","severity","name","message","py","Button","variant","onClick","color","DeviceSelector","onSelect","value","this","prevProps","remoteDescription","StreamlitComponentBase","withStreamlitConnection","overrides","MuiCssBaseline","body","ReactDOM","StrictMode","CssBaseline","document","getElementById","formControl","maxWidth","margin","minWidth","formButtonControl","marginBottom","selectEmpty","marginTop","DeviceSelecter","labelId","devices","onChangeProp","onChange","e","selected","find","d","target","aria-label","setImmediate","map","device","label","DeviceSelectPopper","open","anchorEl","devicesMap","onSubmit","useState","selectedVideo","setSelectedVideo","selectedAudio","setSelectedAudio","handleSubmit","preventDefault","originalBodyHeightRef","useRef","popperRefFn","popper","getElementsByTagName","current","height","window","getComputedStyle","scrollBottom","WebKitCSSMatrix","transform","m42","getBoundingClientRect","scrollHeight","placement","id","type","setOpen","setAnchorEl","setDevicesMap","unavailable","setUnavailable","onOpen","event","currentTarget","enumerateDevices","vidoeDevices","audioDevices","kind","push","onClose"],"mappings":"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","file":"static/js/main.c7ab0404.chunk.js","sourcesContent":["import React from \"react\";\nimport { Theme } from \"streamlit-component-lib\";\nimport {\n  createMuiTheme,\n  ThemeProvider as MuiThemeProvider,\n} from \"@material-ui/core/styles\";\nimport chroma from \"chroma-js\";\n\ninterface StreamlitThemeProviderProps {\n  theme: Theme | undefined;\n}\nexport const ThemeProvider: React.VFC<\n  React.PropsWithChildren<StreamlitThemeProviderProps>\n> = (props) => {\n  const stTheme = props.theme;\n\n  const muiTheme = React.useMemo(() => {\n    if (stTheme == null) {\n      return undefined;\n    }\n\n    const textColorScale = chroma\n      .scale([stTheme.textColor, stTheme.backgroundColor])\n      .mode(\"lab\");\n\n    return createMuiTheme({\n      palette: {\n        primary: {\n          main: stTheme.primaryColor,\n        },\n        background: {\n          default: stTheme.backgroundColor,\n          paper: stTheme.secondaryBackgroundColor,\n        },\n        text: {\n          primary: stTheme.textColor,\n          secondary: textColorScale(0.1).hex(),\n          disabled: textColorScale(0.5).hex(),\n        },\n      },\n      typography: {\n        fontFamily: stTheme.font,\n      },\n    });\n  }, [stTheme]);\n\n  if (muiTheme == null) {\n    return <>{props.children}</>;\n  }\n\n  return <MuiThemeProvider theme={muiTheme}>{props.children}</MuiThemeProvider>;\n};\n\nexport default ThemeProvider;\n","import { Streamlit } from \"streamlit-component-lib\";\nimport React, { useEffect, useCallback } from \"react\";\n\nconst videoStyle: JSX.IntrinsicElements[\"video\"][\"style\"] = {\n  width: \"100%\",\n};\n\ninterface MediaStreamPlayerProps {\n  stream: MediaStream;\n}\nconst MediaStreamPlayer: React.VFC<MediaStreamPlayerProps> = (props) => {\n  useEffect(() => {\n    Streamlit.setFrameHeight();\n  });\n\n  const hasVideo = props.stream.getVideoTracks().length > 0;\n\n  const refCallback = useCallback(\n    (node: HTMLVideoElement | HTMLAudioElement | null) => {\n      if (node) {\n        node.srcObject = props.stream;\n      }\n    },\n    [props.stream]\n  );\n\n  const refreshFrameHeight = useCallback(() => Streamlit.setFrameHeight(), []);\n\n  return hasVideo ? (\n    <video\n      style={videoStyle}\n      ref={refCallback}\n      autoPlay\n      controls\n      onCanPlay={refreshFrameHeight}\n    />\n  ) : (\n    <audio ref={refCallback} autoPlay controls />\n  );\n};\n\nexport default React.memo(MediaStreamPlayer);\n","import { Streamlit } from \"streamlit-component-lib\";\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport VideoLabelIcon from \"@material-ui/icons/VideoLabel\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(4),\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n}));\n\ninterface PlaceholderProps {\n  loading: boolean;\n}\nconst Placeholder: React.VFC<PlaceholderProps> = (props) => {\n  useEffect(() => {\n    Streamlit.setFrameHeight();\n  });\n\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.paper} elevation={0}>\n      {props.loading ? (\n        <CircularProgress />\n      ) : (\n        <VideoLabelIcon fontSize=\"large\" />\n      )}\n    </Paper>\n  );\n};\n\nexport default React.memo(Placeholder);\n","export function compileMediaConstraints(\n  src: MediaStreamConstraints | undefined,\n  videoDeviceId: string | undefined,\n  audioDeviceId: string | undefined\n): MediaStreamConstraints {\n  const constraints = src || {};\n\n  if (videoDeviceId) {\n    if (constraints.video === true) {\n      constraints.video = {\n        deviceId: videoDeviceId,\n      };\n    } else if (\n      typeof constraints.video === \"object\" ||\n      constraints.video == null\n    ) {\n      constraints.video = {\n        ...constraints.video,\n        deviceId: videoDeviceId,\n      };\n    }\n  }\n\n  if (audioDeviceId) {\n    if (constraints.audio === true) {\n      constraints.audio = {\n        deviceId: audioDeviceId,\n      };\n    } else if (\n      typeof constraints.audio === \"object\" ||\n      constraints.audio == null\n    ) {\n      constraints.audio = {\n        ...constraints.audio,\n        deviceId: audioDeviceId,\n      };\n    }\n  }\n\n  return constraints;\n}\n\ninterface MediaUsage {\n  videoEnabled: boolean;\n  audioEnabled: boolean;\n}\nexport function getMediaUsage(constraintsFromPython: any): MediaUsage {\n  const videoEnabled = constraintsFromPython\n    ? !!constraintsFromPython.video\n    : true;\n  const audioEnabled = constraintsFromPython\n    ? !!constraintsFromPython.audio\n    : true;\n\n  return { videoEnabled, audioEnabled };\n}\n","import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n  ComponentProps,\n} from \"streamlit-component-lib\";\nimport React, { ReactNode } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport DeviceSelector from \"./DeviceSelector\";\nimport ThemeProvider from \"./ThemeProvider\";\nimport MediaStreamPlayer from \"./MediaStreamPlayer\";\nimport Placeholder from \"./Placeholder\";\nimport { compileMediaConstraints, getMediaUsage } from \"./media-constraint\";\n\ntype WebRtcMode = \"RECVONLY\" | \"SENDONLY\" | \"SENDRECV\";\nconst isWebRtcMode = (val: unknown): val is WebRtcMode =>\n  val === \"RECVONLY\" || val === \"SENDONLY\" || val === \"SENDRECV\";\nconst isReceivable = (mode: WebRtcMode): boolean =>\n  mode === \"SENDRECV\" || mode === \"RECVONLY\";\nconst isTransmittable = (mode: WebRtcMode): boolean =>\n  mode === \"SENDRECV\" || mode === \"SENDONLY\";\n\nconst setupOffer = (\n  pc: RTCPeerConnection\n): Promise<RTCSessionDescription | null> => {\n  return pc\n    .createOffer()\n    .then((offer) => {\n      console.log(\"Created offer:\", offer);\n      return pc.setLocalDescription(offer);\n    })\n    .then(() => {\n      console.log(\"Wait for ICE gethering...\");\n      // Wait for ICE gathering to complete\n      return new Promise<void>((resolve) => {\n        if (pc.iceGatheringState === \"complete\") {\n          resolve();\n        } else {\n          const checkState = () => {\n            if (pc.iceGatheringState === \"complete\") {\n              pc.removeEventListener(\"icegatheringstatechange\", checkState);\n              resolve();\n            }\n          };\n          pc.addEventListener(\"icegatheringstatechange\", checkState);\n        }\n      });\n    })\n    .then(() => {\n      const offer = pc.localDescription;\n      return offer;\n    })\n    .catch((err) => {\n      console.error(err);\n      throw err;\n    });\n};\n\ntype WebRtcState = \"STOPPED\" | \"SIGNALLING\" | \"PLAYING\" | \"STOPPING\";\n\ninterface State {\n  webRtcState: WebRtcState;\n  sdpOffer: RTCSessionDescription | null;\n  signallingTimedOut: boolean;\n  videoInput: MediaDeviceInfo | null;\n  audioInput: MediaDeviceInfo | null;\n  stream: MediaStream | null;\n  error: Error | null;\n}\n\nconst SIGNALLING_TIMEOUT = 10 * 1000;\n\nclass WebRtcStreamer extends StreamlitComponentBase<State> {\n  private pc: RTCPeerConnection | undefined;\n  private signallingTimer: NodeJS.Timeout | undefined;\n\n  constructor(props: ComponentProps) {\n    super(props);\n\n    this.state = {\n      webRtcState: \"STOPPED\",\n      sdpOffer: null,\n      signallingTimedOut: false,\n      videoInput: null,\n      audioInput: null,\n      stream: null,\n      error: null,\n    };\n  }\n\n  private processAnswerInner = async (\n    pc: RTCPeerConnection,\n    sdpAnswerJson: string\n  ): Promise<void> => {\n    const sdpAnswer = JSON.parse(sdpAnswerJson);\n    console.log(\"Receive answer sdpOffer\", sdpAnswer);\n    await pc.setRemoteDescription(sdpAnswer);\n    console.log(\"Remote description is set\");\n  };\n\n  private processAnswer = (\n    pc: RTCPeerConnection,\n    sdpAnswerJson: string\n  ): void => {\n    this.processAnswerInner(pc, sdpAnswerJson)\n      .then(() => {\n        if (this.signallingTimer) {\n          clearTimeout(this.signallingTimer);\n        }\n        this.setState({\n          webRtcState: \"PLAYING\",\n          sdpOffer: null,\n        });\n      })\n      .catch((error) => {\n        this.setState({ error });\n        this.stop();\n      });\n  };\n\n  private startInner = async () => {\n    const mode = this.props.args[\"mode\"];\n    if (!isWebRtcMode(mode)) {\n      throw new Error(`Invalid mode ${mode}`);\n    }\n\n    this.setState({\n      webRtcState: \"SIGNALLING\",\n      stream: null,\n      error: null,\n    });\n\n    const config: RTCConfiguration =\n      this.props.args.settings?.rtc_configuration || {};\n    console.log(\"RTCConfiguration:\", config);\n    const pc = new RTCPeerConnection(config);\n\n    // Connect received audio / video to DOM elements\n    if (mode === \"SENDRECV\" || mode === \"RECVONLY\") {\n      pc.addEventListener(\"track\", (evt) => {\n        const stream = evt.streams[0]; // TODO: Handle multiple streams\n        this.setState({\n          stream,\n        });\n      });\n    }\n\n    // Set up transceivers\n    if (mode === \"SENDRECV\" || mode === \"SENDONLY\") {\n      const constraints = compileMediaConstraints(\n        this.props.args.settings?.media_stream_constraints,\n        this.state.videoInput?.deviceId,\n        this.state.audioInput?.deviceId\n      );\n      console.log(\"MediaStreamConstraints:\", constraints);\n\n      if (constraints.audio || constraints.video) {\n        if (navigator.mediaDevices == null) {\n          // Ref: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia#privacy_and_security\n          // > A secure context is, in short, a page loaded using HTTPS or the file:/// URL scheme, or a page loaded from localhost.\n          throw new Error(\n            \"navigator.mediaDevices is undefined. It seems the current document is not loaded securely.\"\n          );\n        }\n        if (navigator.mediaDevices.getUserMedia == null) {\n          throw new Error(\"getUserMedia is not implemented in this browser\");\n        }\n\n        const stream = await navigator.mediaDevices.getUserMedia(constraints);\n        stream.getTracks().forEach((track) => {\n          pc.addTrack(track, stream);\n        });\n      }\n\n      if (mode === \"SENDONLY\") {\n        for (const transceiver of pc.getTransceivers()) {\n          transceiver.direction = \"sendonly\";\n        }\n      }\n    } else if (mode === \"RECVONLY\") {\n      pc.addTransceiver(\"video\", { direction: \"recvonly\" });\n      pc.addTransceiver(\"audio\", { direction: \"recvonly\" });\n    }\n\n    console.log(\"transceivers\", pc.getTransceivers());\n\n    this.pc = pc;\n\n    await setupOffer(pc).then((offer) => {\n      if (offer == null) {\n        throw new Error(\"Failed to create an offer SDP\");\n      }\n\n      this.setState({\n        sdpOffer: offer,\n      });\n    });\n  };\n\n  private start = (): void => {\n    if (this.state.webRtcState !== \"STOPPED\") {\n      return;\n    }\n\n    this.setState({ signallingTimedOut: false });\n    this.signallingTimer = setTimeout(() => {\n      this.setState({ signallingTimedOut: true });\n    }, SIGNALLING_TIMEOUT);\n\n    this.startInner().catch((error) =>\n      this.setState({ webRtcState: \"STOPPED\", sdpOffer: null, error })\n    );\n  };\n\n  private stopInner = async (): Promise<void> => {\n    if (this.state.webRtcState === \"STOPPING\") {\n      return;\n    }\n\n    const pc = this.pc;\n    this.pc = undefined;\n\n    this.setState({ webRtcState: \"STOPPING\", sdpOffer: null });\n\n    if (pc == null) {\n      return;\n    }\n\n    // close transceivers\n    if (pc.getTransceivers) {\n      pc.getTransceivers().forEach(function (transceiver) {\n        if (transceiver.stop) {\n          transceiver.stop();\n        }\n      });\n    }\n\n    // close local audio / video\n    pc.getSenders().forEach(function (sender) {\n      sender.track?.stop();\n    });\n\n    // close peer connection\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        pc.close();\n        resolve();\n      }, 500);\n    });\n  };\n\n  private stop = () => {\n    this.stopInner()\n      .catch((error) => this.setState({ error }))\n      .finally(() => {\n        this.setState({\n          webRtcState: \"STOPPED\",\n          sdpOffer: null,\n          stream: null,\n        });\n      });\n  };\n\n  private reconcilePlayingState = () => {\n    const desiredPlayingState = this.props.args[\"desired_playing_state\"];\n    if (desiredPlayingState != null) {\n      if (\n        desiredPlayingState === true &&\n        this.state.webRtcState === \"STOPPED\"\n      ) {\n        this.start();\n      } else if (\n        desiredPlayingState === false &&\n        (this.state.webRtcState === \"SIGNALLING\" ||\n          this.state.webRtcState === \"PLAYING\")\n      ) {\n        this.stop();\n      }\n    }\n  };\n\n  private reconcileComponentValue = (prevState: State) => {\n    if (this.state === prevState) {\n      return;\n    }\n\n    const playing = this.state.webRtcState === \"PLAYING\";\n    const prevPlaying = prevState.webRtcState === \"PLAYING\";\n    const playingChanged = playing !== prevPlaying;\n\n    const sdpOffer = this.state.sdpOffer;\n    const prevSdpOffer = prevState.sdpOffer;\n    const sdpOfferChanged = sdpOffer !== prevSdpOffer;\n\n    if (playingChanged || sdpOfferChanged) {\n      if (sdpOffer) {\n        console.log(\"Send SDP offer\", sdpOffer);\n      }\n      Streamlit.setComponentValue({\n        playing,\n        sdpOffer: sdpOffer ? sdpOffer.toJSON() : \"\", // `Streamlit.setComponentValue` cannot \"unset\" the field by passing null or undefined, so here an empty string is set instead when `sdpOffer` is undefined. // TODO: Create an issue\n      });\n    }\n  };\n\n  public componentDidMount() {\n    super.componentDidMount();\n\n    this.reconcilePlayingState();\n  }\n\n  // @ts-ignore  // TODO: Fix the base class definition\n  public componentDidUpdate(prevProps: ComponentProps, prevState: State) {\n    super.componentDidUpdate();\n\n    this.reconcilePlayingState();\n\n    this.reconcileComponentValue(prevState);\n\n    if (this.pc == null) {\n      return;\n    }\n    const pc = this.pc;\n    if (pc.remoteDescription == null) {\n      const sdpAnswerJson = this.props.args[\"sdp_answer_json\"];\n      const prevSdpAnswerJson = prevProps.args[\"sdp_answer_json\"];\n      const sdpAnswerJsonChanged = sdpAnswerJson !== prevSdpAnswerJson;\n      if (sdpAnswerJsonChanged) {\n        if (sdpAnswerJson && this.state.webRtcState === \"SIGNALLING\") {\n          this.processAnswer(pc, sdpAnswerJson);\n        }\n      }\n    }\n  }\n\n  private handleDeviceSelect = (\n    video: MediaDeviceInfo | null,\n    audio: MediaDeviceInfo | null\n  ) => {\n    this.setState({ videoInput: video, audioInput: audio });\n  };\n\n  public render = (): ReactNode => {\n    const desiredPlayingState = this.props.args[\"desired_playing_state\"];\n    const buttonDisabled =\n      this.props.disabled ||\n      (this.state.webRtcState === \"SIGNALLING\" &&\n        !this.state.signallingTimedOut) || // Users can click the stop button after signalling timed out.\n      this.state.webRtcState === \"STOPPING\" ||\n      desiredPlayingState != null;\n    const mode = this.props.args[\"mode\"];\n    const { videoEnabled, audioEnabled } = getMediaUsage(\n      this.props.args.settings?.media_stream_constraints\n    );\n    const receivable = isWebRtcMode(mode) && isReceivable(mode);\n    const transmittable = isWebRtcMode(mode) && isTransmittable(mode);\n\n    return (\n      <ThemeProvider theme={this.props.theme}>\n        <Box>\n          {this.state.error && (\n            <Alert severity=\"error\">\n              {this.state.error.name}: {this.state.error.message}\n            </Alert>\n          )}\n          <Box py={1}>\n            {this.state.stream ? (\n              <MediaStreamPlayer stream={this.state.stream} />\n            ) : (\n              receivable && (\n                <Placeholder\n                  loading={this.state.webRtcState === \"SIGNALLING\"}\n                />\n              )\n            )}\n          </Box>\n          <Box display=\"flex\" justifyContent=\"space-between\">\n            {this.state.webRtcState === \"PLAYING\" ||\n            this.state.webRtcState === \"SIGNALLING\" ? (\n              <Button\n                variant=\"contained\"\n                onClick={this.stop}\n                disabled={buttonDisabled}\n              >\n                Stop\n              </Button>\n            ) : (\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={this.start}\n                disabled={buttonDisabled}\n              >\n                Start\n              </Button>\n            )}\n            {transmittable && (\n              <DeviceSelector\n                videoEnabled={videoEnabled}\n                audioEnabled={audioEnabled}\n                onSelect={this.handleDeviceSelect}\n                value={{\n                  video: this.state.videoInput,\n                  audio: this.state.audioInput,\n                }}\n              />\n            )}\n          </Box>\n        </Box>\n      </ThemeProvider>\n    );\n  };\n}\n\n// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nexport default withStreamlitConnection(WebRtcStreamer);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport WebRtcStreamer from \"./WebRtcStreamer\";\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiCssBaseline: {\n      \"@global\": {\n        body: {\n          // Unset the background-color since <CssBaseLine /> applies the default Material Design background color\n          // (https://material-ui.com/components/css-baseline/#approach),\n          // which however does not match the Streamlit's background.\n          backgroundColor: \"initial\",\n        },\n      },\n    },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <WebRtcStreamer />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import React, { useState, useCallback, useRef, useEffect } from \"react\";\nimport { Streamlit } from \"streamlit-component-lib\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button, { ButtonProps } from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select, { SelectProps } from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Popper, { PopperProps } from \"@material-ui/core/Popper\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n  },\n  formControl: {\n    maxWidth: \"80vw\",\n    margin: theme.spacing(1),\n    minWidth: 120,\n    display: \"flex\",\n  },\n  formButtonControl: {\n    margin: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n    minWidth: 120,\n    display: \"flex\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\ninterface DevicesMap {\n  audio: MediaDeviceInfo[];\n  video: MediaDeviceInfo[];\n}\n\ninterface DeviceSelecterProps {\n  labelId: SelectProps[\"labelId\"];\n  value: MediaDeviceInfo | null;\n  devices: MediaDeviceInfo[];\n  onChange: (device: MediaDeviceInfo | null) => void;\n}\nconst DeviceSelecter = ({\n  labelId,\n  value,\n  devices,\n  onChange: onChangeProp,\n}: DeviceSelecterProps) => {\n  const classes = useStyles();\n\n  const onChange = useCallback<NonNullable<SelectProps[\"onChange\"]>>(\n    (e) => {\n      const selected = devices.find((d) => d.deviceId === e.target.value);\n      onChangeProp(selected || null);\n    },\n    [devices, onChangeProp]\n  );\n\n  if (devices.length === 0) {\n    return (\n      <Select value=\"\" disabled>\n        <option aria-label=\"None\" value=\"\" />\n      </Select>\n    );\n  }\n\n  if (value == null) {\n    setImmediate(() => onChangeProp(devices[0]));\n    return null;\n  }\n\n  return (\n    <Select\n      labelId={labelId}\n      value={value.deviceId}\n      onChange={onChange}\n      className={classes.selectEmpty}\n    >\n      {devices.map((device) => (\n        <MenuItem key={device.deviceId} value={device.deviceId}>\n          {device.label}\n        </MenuItem>\n      ))}\n    </Select>\n  );\n};\n\ninterface DeviceSelectPopperProps {\n  open: boolean;\n  anchorEl: PopperProps[\"anchorEl\"];\n  videoEnabled: boolean;\n  audioEnabled: boolean;\n  value: {\n    video: MediaDeviceInfo | null;\n    audio: MediaDeviceInfo | null;\n  };\n  devicesMap: DevicesMap;\n  onSubmit: (\n    video: MediaDeviceInfo | null,\n    audio: MediaDeviceInfo | null\n  ) => void;\n}\nconst DeviceSelectPopper = ({\n  open,\n  anchorEl,\n  videoEnabled,\n  audioEnabled,\n  value,\n  devicesMap,\n  onSubmit,\n}: DeviceSelectPopperProps) => {\n  const [selectedVideo, setSelectedVideo] = useState<MediaDeviceInfo | null>(\n    null\n  );\n  const [selectedAudio, setSelectedAudio] = useState<MediaDeviceInfo | null>(\n    null\n  );\n\n  useEffect(() => {\n    setSelectedVideo(\n      devicesMap.video.find((d) => d.deviceId === value.video?.deviceId) || null\n    );\n    setSelectedAudio(\n      devicesMap.audio.find((d) => d.deviceId === value.audio?.deviceId) || null\n    );\n  }, [devicesMap, value]);\n\n  const handleSubmit = useCallback<\n    NonNullable<React.ComponentProps<\"form\">[\"onSubmit\"]>\n  >(\n    (e) => {\n      e.preventDefault();\n      onSubmit(\n        videoEnabled ? selectedVideo : null,\n        audioEnabled ? selectedAudio : null\n      );\n    },\n    [onSubmit, videoEnabled, audioEnabled, selectedVideo, selectedAudio]\n  );\n\n  const classes = useStyles();\n\n  const originalBodyHeightRef = useRef<string>();\n  const popperRefFn = useCallback((popper: HTMLDivElement | null) => {\n    // Manage <body>'s height reacting to popper appearance.\n    if (popper) {\n      setTimeout(() => {\n        const body = document.getElementsByTagName(\"body\")[0];\n        originalBodyHeightRef.current = body.style.height;\n\n        const style = window.getComputedStyle(popper);\n        const matrix = new WebKitCSSMatrix(style.transform);\n        const translateY = matrix.m42;\n\n        const scrollBottom = translateY + popper.getBoundingClientRect().height;\n        if (scrollBottom > document.body.scrollHeight) {\n          body.style.height = `${scrollBottom}px`;\n          Streamlit.setFrameHeight();\n        }\n      }, 0);\n    } else {\n      const body = document.getElementsByTagName(\"body\")[0];\n      if (originalBodyHeightRef.current != null) {\n        body.style.height = originalBodyHeightRef.current;\n      }\n      Streamlit.setFrameHeight();\n    }\n  }, []);\n\n  return (\n    <Popper\n      ref={popperRefFn}\n      open={open}\n      anchorEl={anchorEl}\n      placement=\"left-end\"\n    >\n      <Paper className={classes.paper}>\n        <form onSubmit={handleSubmit}>\n          {videoEnabled && (\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"video-input-select\">Video input</InputLabel>\n              <DeviceSelecter\n                labelId=\"video-input-select\"\n                devices={devicesMap.video}\n                value={selectedVideo}\n                onChange={setSelectedVideo}\n              />\n            </FormControl>\n          )}\n          {audioEnabled && (\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"audio-input-select\">Audio input</InputLabel>\n              <DeviceSelecter\n                labelId=\"audio-input-select\"\n                devices={devicesMap.audio}\n                value={selectedAudio}\n                onChange={setSelectedAudio}\n              />\n            </FormControl>\n          )}\n          <FormControl className={classes.formButtonControl}>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n              OK\n            </Button>\n          </FormControl>\n        </form>\n      </Paper>\n    </Popper>\n  );\n};\n\ninterface DeviceSelectorProps {\n  videoEnabled: boolean;\n  audioEnabled: boolean;\n  value: {\n    video: MediaDeviceInfo | null;\n    audio: MediaDeviceInfo | null;\n  };\n  onSelect: (\n    video: MediaDeviceInfo | null,\n    audio: MediaDeviceInfo | null\n  ) => void;\n}\nconst DeviceSelector = ({\n  videoEnabled,\n  audioEnabled,\n  value,\n  onSelect,\n}: DeviceSelectorProps) => {\n  const [open, setOpen] = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\n  const [devicesMap, setDevicesMap] = useState<DevicesMap>();\n  const [unavailable, setUnavailable] = useState(false);\n\n  const onOpen = useCallback<NonNullable<ButtonProps[\"onClick\"]>>((event) => {\n    setAnchorEl(event.currentTarget);\n\n    if (typeof navigator?.mediaDevices?.enumerateDevices !== \"function\") {\n      setDevicesMap(undefined);\n      setUnavailable(true);\n      return;\n    }\n\n    navigator.mediaDevices.enumerateDevices().then((devices) => {\n      const vidoeDevices = [];\n      const audioDevices = [];\n      for (const device of devices) {\n        if (device.kind === \"videoinput\") {\n          vidoeDevices.push(device);\n        } else if (device.kind === \"audioinput\") {\n          audioDevices.push(device);\n        }\n      }\n      setDevicesMap({\n        video: vidoeDevices,\n        audio: audioDevices,\n      });\n      setOpen(true);\n    });\n  }, []);\n  const onClose = useCallback(() => setOpen(false), []);\n\n  const onSubmit = useCallback(\n    (video: MediaDeviceInfo | null, audio: MediaDeviceInfo | null) => {\n      setDevicesMap(undefined);\n      setOpen(false);\n      onSelect(video, audio);\n    },\n    [onSelect]\n  );\n\n  return (\n    <Box>\n      {unavailable && <p>Unavailable</p>}\n      {devicesMap && (\n        <DeviceSelectPopper\n          open={open}\n          anchorEl={anchorEl}\n          videoEnabled={videoEnabled}\n          audioEnabled={audioEnabled}\n          value={value}\n          devicesMap={devicesMap}\n          onSubmit={onSubmit}\n        />\n      )}\n      <Button onClick={open ? onClose : onOpen}>Select device</Button>\n    </Box>\n  );\n};\n\nexport default React.memo(DeviceSelector);\n"],"sourceRoot":""}